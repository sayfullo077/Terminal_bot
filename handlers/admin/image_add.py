from aiogram import types, html, F
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.utils.keyboard import InlineKeyboardBuilder

from keyboards.default.buttons import back_button, admin_button
from states.my_states import ImageAdd
from helper import check_url
from loader import bot, dp
from filters.admin_bot import IsBotOrAssistantAdmin
from database.orm_query import select_all_users, select_user, select_all_order_users


@dp.message(F.text == 'üì∑ Photo', IsBotOrAssistantAdmin())
async def get_format_text(message: types.Message, state: FSMContext):
    await state.set_state(ImageAdd.image)
    back_btn = await back_button()
    await message.answer(
        text=html.bold("Post rasmini yuboring!"),
        reply_markup=back_btn
    )



# @dp.message(ImageAdd.image, IsBotOrAssistantAdmin())
# async def get_text(message: types.Message, session: AsyncSession, state: FSMContext):
#     telegram_id = message.from_user.id
#     user = await select_user(telegram_id, session)
#     language = user.languages
#     back_btn = await back_button(language)
#     if message.content_type == 'photo':
#         photo = message.photo[-1]
#         await message.answer_photo(photo=message.photo[-1].file_id, caption=message.caption)
#         await state.update_data(image=message.photo[-1].file_id)
#         file_info = await bot.get_file(photo.file_id)
#         file_extension = file_info.file_path.split(".")[-1].lower()
#         valid_extensions = ["jpg", "jpeg", "png", "webp"]
#         if file_extension not in valid_extensions:
#             await message.answer(
#                 "Rasm formati noto‚Äòg‚Äòri! Faqat jpg, jpeg, png, yoki webp formatlari qabul qilinadi." if language == 'uz'
#                 else "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è! –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ jpg, jpeg, png –∏–ª–∏ webp.", reply_markup=back_btn
#             )
#             return
#         await state.update_data({
#             'photo': message.photo[-1].file_id,
#             'caption': message.caption
#         })
#         if language == 'uz':
#             text = "Havolani quyidagi formatda yuboring :\n" \
#                    "[tugma matni + havola]\n" \
#                    "Misol :\n" \
#                    "[Tarjimon+https://t.me/Sayfulloh_Mamatqulov]\n" \
#                    "Bir qatorga bir nechta tugmalar qo'shish uchun yangi qatordan yozing.\n" \
#                    "Format :\n" \
#                    "[Birinchi matn + birinchi havola]\n" \
#                    "[Ikkinchi matn + ikkinchi havola]"
#         else:
#             text = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n" \
#                    "[—Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ + —Å—Å—ã–ª–∫–∞]\n" \
#                    "–ü—Ä–∏–º–µ—Ä:\n" \
#                    "[–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫+https://t.me/Sayfulloh_Mamatqulov]\n" \
#                    "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n" \
#                    "–§–æ—Ä–º–∞—Ç:\n" \
#                    "[–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç + –ø–µ—Ä–≤–∞—è —Å—Å—ã–ª–∫–∞]\n" \
#                    "[–í—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç + –≤—Ç–æ—Ä–∞—è —Å—Å—ã–ª–∫–∞]"
#
#         get_before_btn = await get_before_button(language)
#         await message.answer(text, reply_markup=get_before_btn)
#         await state.set_state(ImageAdd.url)
#
#     else:
#         await message.answer(html.bold("Post rasmini yuboring!" if language == 'uz' else "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ—Å—Ç–∞!"))
#         await state.set_state(ImageAdd.image)
#
#
# @dp.message(F.text.in_(["Davom etish ‚û°Ô∏è", "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è"]), ImageAdd.url, IsBotOrAssistantAdmin())
# async def back(message: types.Message, session: AsyncSession, state: FSMContext):
#     telegram_id = message.from_user.id
#     user = await select_user(telegram_id, session)
#     language = user.languages
#     data = await state.get_data()
#     await message.answer_photo(photo=data['image'], caption=data['caption'])
#     send_btn = await send_button(language)
#     await message.answer("Agar tayyor bo'lsa 'üì§ Yuborish' tugmasini bosing." if language == 'uz'
#                          else "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ ¬´üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.", reply_markup=send_btn)
#     await state.set_state(ImageAdd.send)
#
#
# @dp.message(ImageAdd.url, IsBotOrAssistantAdmin())
# async def get_url(message: types.Message, session: AsyncSession, state: FSMContext):
#     telegram_id = message.from_user.id
#     user = await select_user(telegram_id, session)
#     language = user.languages
#     get_before_btn = await get_before_button(language)
#     send_btn = await send_button(language)
#     if message.content_type == 'text':
#         await message.answer(message.text)
#         urls = check_url(text=message.text)
#         urls = urls if urls else None
#         await state.update_data({
#             'buttons': urls
#         })
#         data = await state.get_data()
#         links = urls.splitlines()
#         btn = InlineKeyboardBuilder()
#         for link in links:
#             manzil = link[link.rfind('+') + 1:].strip()
#             text = link[:link.rfind('+')].strip()
#             btn.button(text=text, url=manzil)
#         btn.adjust(1)
#         await message.answer_photo(photo=data['photo'], caption=data['caption'], reply_markup=btn.as_markup())
#         await message.answer("Agar tayyor bo'lsa 'üì§ Yuborish' tugmasini bosing." if language == 'uz'
#                              else "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ ¬´üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.", reply_markup=send_btn)
#         await state.set_state(ImageAdd.send)
#
#     else:
#         if language == 'uz':
#             text = "Havolani quyidagi formatda yuboring :\n" \
#                    "[tugma matni + havola]\n" \
#                    "Misol :\n" \
#                    "[Tarjimon+https://t.me/Sayfulloh_Mamatqulov]\n" \
#                    "Bir qatorga bir nechta tugmalar qo'shish uchun yangi qatordan yozing.\n" \
#                    "Format :\n" \
#                    "[Birinchi matn + birinchi havola]\n" \
#                    "[Ikkinchi matn + ikkinchi havola]"
#         else:
#             text = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n" \
#                    "[—Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ + —Å—Å—ã–ª–∫–∞]\n" \
#                    "–ü—Ä–∏–º–µ—Ä:\n" \
#                    "[–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫+https://t.me/Sayfulloh_Mamatqulov]\n" \
#                    "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n" \
#                    "–§–æ—Ä–º–∞—Ç:\n" \
#                    "[–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç + –ø–µ—Ä–≤–∞—è —Å—Å—ã–ª–∫–∞]\n" \
#                    "[–í—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç + –≤—Ç–æ—Ä–∞—è —Å—Å—ã–ª–∫–∞]"
#         await message.answer(text, reply_markup=get_before_btn)
#         await state.set_state(ImageAdd.url)
#
#
# @dp.message(F.text.in_(["üì§ Yuborish", "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å"]), ImageAdd.send, IsBotOrAssistantAdmin())
# async def send_add(message: types.Message,  session: AsyncSession, state: FSMContext):
#     await state.set_state(ImageAdd.check)
#     user_id = message.from_user.id
#     user = await select_user(telegram_id=user_id, session=session)
#     language = user.languages
#     text = "Kimlar uchun foto xabarini yubormoqchisiz?" if language == 'uz' else "–ö–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–µ?"
#     send_btn = await ad_send_btn(language)
#     await message.answer(text=text, reply_markup=send_btn)
#
#
# @dp.message(F.text.in_(["Buyurtma berganlar ‚úÖ", "–¢–µ, –∫—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –∑–∞–∫–∞–∑ ‚úÖ"]), ImageAdd.check, IsBotOrAssistantAdmin())
# async def send_to_order_users(message: types.Message, session: AsyncSession, state: FSMContext):
#     user_id = message.from_user.id
#     user = await select_user(telegram_id=user_id, session=session)
#     language = user.languages
#     data = await state.get_data()
#     users = await select_all_order_users(session)
#     admin_btn = await admin_button(language)
#     if users:
#         if data.get('buttons', None):
#             links = data['buttons'].splitlines()
#             btn = InlineKeyboardBuilder()
#             for link in links:
#                 manzil = link[link.rfind('+') + 1:].strip()
#                 text = link[:link.rfind('+')].strip()
#                 btn.button(text=text, url=manzil)
#             btn.adjust(1)
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(
#                         photo=data['photo'],
#                         caption=data['caption'],
#                         chat_id=i.user_id,
#                         reply_markup=btn.as_markup(row_width=1)
#                     )
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#             await message.answer(f"Buyurtma bergan {counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}, –æ—Ñ–æ—Ä–º–∏–≤—à–∏–º –∑–∞–∫–∞–∑!", reply_markup=admin_btn)
#         else:
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(photo=data['photo'], caption=data['caption'], chat_id=i.user_id)
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#
#             await message.answer(f"Buyurtma bergan {counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}, –æ—Ñ–æ—Ä–º–∏–≤—à–∏–º –∑–∞–∫–∞–∑!", reply_markup=admin_btn)
#         await state.clear()
#     else:
#         await state.clear()
#         await message.answer("Buyurtma bergan foydalanuvchilar majud emas !" if language == 'uz' else
#                              "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ñ–æ—Ä–º–∏–≤—à–∏—Ö –∑–∞–∫–∞–∑, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!", reply_markup=admin_btn)
#
#
# @dp.message(F.text.in_(["Buyurtma bermaganlar ‚ùå", "–¢–µ, –∫—Ç–æ –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª ‚ùå"]), ImageAdd.check, IsBotOrAssistantAdmin())
# async def send_to_no_order_users(message: types.Message, session: AsyncSession, state: FSMContext):
#     user_id = message.from_user.id
#     user = await select_user(telegram_id=user_id, session=session)
#     language = user.languages
#     data = await state.get_data()
#     users = await select_all_no_order_users(session)
#     admin_btn = await admin_button(language)
#     if users:
#         if data.get('buttons', None):
#             links = data['buttons'].splitlines()
#             btn = InlineKeyboardBuilder()
#             for link in links:
#                 manzil = link[link.rfind('+') + 1:].strip()
#                 text = link[:link.rfind('+')].strip()
#                 btn.button(text=text, url=manzil)
#             btn.adjust(1)
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(
#                         photo=data['photo'],
#                         caption=data['caption'],
#                         chat_id=i.user_id,
#                         reply_markup=btn.as_markup(row_width=1)
#                     )
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#             await message.answer(f"Buyurtma bermagan {counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞–∫–∞–∑!",
#                                  reply_markup=admin_btn)
#         else:
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(photo=data['photo'], caption=data['caption'], chat_id=i.user_id)
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#
#             await message.answer(f"Buyurtma bermagan {counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞–∫–∞–∑!",
#                                  reply_markup=admin_btn)
#         await state.clear()
#     else:
#         await message.answer("Buyurtma bermagan foydalanuvchilar majud emas !" if language == 'uz' else
#                              "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–µ –æ—Ñ–æ—Ä–º–∏–≤—à–∏–µ –∑–∞–∫–∞–∑, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!", reply_markup=admin_btn)
#         await state.clear()
#
#
# @dp.message(F.text.in_(["Hamma uchun üë®‚Äçüë¶‚Äçüë¶", "–î–ª—è –≤—Å–µ—Ö üë®‚Äçüë¶‚Äçüë¶"]), ImageAdd.check, IsBotOrAssistantAdmin())
# async def send_to_all_users(message: types.Message, session: AsyncSession, state: FSMContext):
#     user_id = message.from_user.id
#     user = await select_user(telegram_id=user_id, session=session)
#     language = user.languages
#     data = await state.get_data()
#     users = await select_all_users(session)
#     admin_btn = await admin_button(language)
#     if users:
#         if data.get('buttons', None):
#             links = data['buttons'].splitlines()
#             btn = InlineKeyboardBuilder()
#             for link in links:
#                 manzil = link[link.rfind('+') + 1:].strip()
#                 text = link[:link.rfind('+')].strip()
#                 btn.button(text=text, url=manzil)
#             btn.adjust(1)
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(
#                         photo=data['photo'],
#                         caption=data['caption'],
#                         chat_id=i.user_id,
#                         reply_markup=btn.as_markup(row_width=1)
#                     )
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#             await message.answer(f"{counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}!", reply_markup=admin_btn)
#         else:
#             counter = 0
#             for i in users:
#                 try:
#                     await bot.send_photo(photo=data['photo'], caption=data['caption'], chat_id=i.user_id)
#                     counter += 1
#                 except Exception as e:
#                     print(e)
#
#             await message.answer(f"{counter}ta obunachiga xabar yuborildi!" if language == 'uz' else
#                                  f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {counter}!", reply_markup=admin_btn)
#         await state.clear()
#     else:
#         await message.answer("Foydalanuvchilar majud emas !" if language == 'uz' else
#                              "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π !", reply_markup=admin_btn)
#         await state.clear()
